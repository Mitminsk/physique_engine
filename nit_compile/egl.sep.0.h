#include "nit.common.h"
val* BOX_core__Pointer(void*);
extern const struct type type_egl__EGLNativeDisplayType;
extern const struct class class_egl__EGLNativeDisplayType;
void* egl___new_EGLNativeDisplayType_from_x11___impl( void* handle );
extern const struct type type_egl__EGLDisplay;
extern const struct class class_egl__EGLDisplay;
void* egl___new_EGLDisplay_current___impl(  );
void* egl___new_EGLDisplay___impl( void* handle );
int egl___EGLDisplay_is_valid___impl( void* self );
int egl___EGLDisplay_initialize___impl( void* self );
long egl___EGLDisplay_major_version___impl( void* self );
long egl___EGLDisplay_minor_version___impl( void* self );
struct nitni_instance * egl___EGLDisplay_choose_configs___impl( void* self, struct nitni_instance * attribs );
extern const int COLOR_core__abstract_collection__Collection__length;
extern const int COLOR_core__abstract_collection__SequenceRead___91d_93d;
val* NEW_core__Array(const struct type* type);
extern const struct type type_core__Array__egl__EGLConfig;
extern const int COLOR_core__kernel__Object__init;
extern const struct type type_egl__EGLConfig;
extern const struct class class_egl__EGLConfig;
extern const int COLOR_core__abstract_collection__SimpleCollection__add;
extern const int COLOR_egl__EGLDisplay__report_egl_error;
val* core__flat___NativeString___core__abstract_text__Object__to_s(char* self);
val* NEW_core__NativeArray(int length, const struct type* type);
extern const struct type type_core__NativeArray__core__String;
val* core__flat___NativeString___to_s_full(char* self, long p0, long p1);
extern const int COLOR_core__abstract_text__NativeArray__native_to_s;
extern const int COLOR_core__file__Sys__print;
long egl___EGLDisplay_config_attrib___impl( void* self, void* config, long attribute );
int egl___EGLDisplay_terminate___impl( void* self );
extern const struct type type_egl__EGLSurface;
extern const struct class class_egl__EGLSurface;
void* egl___EGLDisplay_create_window_surface___impl( void* self, void* config, void* native_window, struct nitni_instance * attribs );
extern const struct type type_egl__EGLContext;
extern const struct class class_egl__EGLContext;
void* egl___EGLDisplay_create_context___impl( void* self, void* config );
int egl___EGLDisplay_make_current___impl( void* self, void* draw, void* read, void* context );
long egl___EGLDisplay_query_surface___impl( void* self, void* surface, long attribute );
int egl___EGLDisplay_destroy_context___impl( void* self, void* context );
int egl___EGLDisplay_destroy_surface___impl( void* self, void* surface );
extern const struct type type_egl__EGLError;
extern const struct class class_egl__EGLError;
void* egl___EGLDisplay_error___impl( void* self );
extern const int COLOR_egl__EGLDisplay__error;
extern const int COLOR_egl__EGLError__is_success;
extern const int COLOR_core__abstract_text__Object__to_s;
extern const char FILE_egl[];
struct nitni_instance * egl___EGLDisplay_query_string___impl( void* self, long name );
extern const int COLOR_egl__EGLDisplay__query_string;
extern const int COLOR_core__string_search__Text__split_with;
void egl___EGLDisplay_swap_buffers___impl( void* self, void* surface );
val* NEW_egl__EGLConfigAttribs(const struct type* type);
extern const struct type type_egl__EGLConfigAttribs;
extern const int COLOR_egl__EGLConfigAttribs__display_61d;
extern const int COLOR_egl__EGLConfigAttribs__config_61d;
void* egl___new_EGLSurface_current_draw___impl(  );
void* egl___new_EGLSurface_current_read___impl(  );
void* egl___new_EGLSurface_none___impl(  );
int egl___EGLSurface_is_ok___impl( void* self );
val* NEW_egl__EGLSurfaceAttribs(const struct type* type);
extern const struct type type_egl__EGLSurfaceAttribs;
extern const int COLOR_egl__EGLSurfaceAttribs__display_61d;
extern const int COLOR_egl__EGLSurfaceAttribs__surface_61d;
void* egl___new_EGLContext_current___impl(  );
void* egl___new_EGLContext_none___impl(  );
int egl___EGLContext_is_ok___impl( void* self );
extern const int COLOR_egl__EGLConfigAttribs___display;
extern const int COLOR_egl__EGLConfigAttribs___config;
extern const int COLOR_egl__EGLConfigAttribs__display;
extern const int COLOR_egl__EGLConfigAttribs__config;
extern const int COLOR_egl__EGLDisplay__config_attrib;
val* NEW_egl__EGLConfigCaveat(const struct type* type);
extern const struct type type_egl__EGLConfigCaveat;
extern const int COLOR_egl__EGLConfigCaveat__from_i;
val* NEW_egl__EGLConformant(const struct type* type);
extern const struct type type_egl__EGLConformant;
extern const int COLOR_egl__EGLConformant__from_i;
extern const int COLOR_egl___egl__EGLConfigAttribs___core__kernel__Object__init;
extern const struct class class_egl__EGLConfigCaveat;
void* egl___new_EGLConfigCaveat_from_i___impl( long val );
long egl___EGLConfigCaveat_to_i___impl( void* self );
void* egl___new_EGLConfigCaveat_none___impl(  );
int egl___EGLConfigCaveat_is_none___impl( void* self );
void* egl___new_EGLConfigCaveat_dont_care___impl(  );
int egl___EGLConfigCaveat_is_dont_care___impl( void* self );
void* egl___new_EGLConfigCaveat_slow___impl(  );
int egl___EGLConfigCaveat_is_slow___impl( void* self );
void* egl___new_EGLConfigCaveat_non_conformant___impl(  );
int egl___EGLConfigCaveat_is_non_conformant___impl( void* self );
extern const int COLOR_egl__EGLConfigCaveat__is_none;
extern const int COLOR_egl__EGLConfigCaveat__is_dont_care;
extern const int COLOR_egl__EGLConfigCaveat__is_slow;
extern const int COLOR_egl__EGLConfigCaveat__is_non_conformant;
extern const struct class class_egl__EGLConformant;
void* egl___new_EGLConformant___impl(  );
void* egl___new_EGLConformant_from_i___impl( long val );
long egl___EGLConformant_to_i___impl( void* self );
int egl___EGLConformant_opengl___impl( void* self );
void* egl___EGLConformant_with_opengl___impl( void* self );
int egl___EGLConformant_opengl_es___impl( void* self );
void* egl___EGLConformant_with_opengl_es___impl( void* self );
int egl___EGLConformant_opengl_es2___impl( void* self );
void* egl___EGLConformant_with_opengl_es2___impl( void* self );
int egl___EGLConformant_openvg___impl( void* self );
void* egl___EGLConformant_with_openvg___impl( void* self );
extern const struct type type_core__Array__core__String;
extern const int COLOR_egl__EGLConformant__opengl;
extern const int COLOR_egl__EGLConformant__opengl_es;
extern const int COLOR_egl__EGLConformant__opengl_es2;
extern const int COLOR_egl__EGLConformant__openvg;
extern const int COLOR_egl__EGLConformant__to_a;
extern const int COLOR_core__abstract_text__Collection__join;
extern const int COLOR_egl__EGLSurfaceAttribs___display;
extern const int COLOR_egl__EGLSurfaceAttribs___surface;
extern const int COLOR_egl__EGLSurfaceAttribs__display;
extern const int COLOR_egl__EGLSurfaceAttribs__surface;
extern const int COLOR_egl__EGLDisplay__query_surface;
extern const int COLOR_egl___egl__EGLSurfaceAttribs___core__kernel__Object__init;
int egl___EGLError_is_success___impl( void* self );
int egl___EGLError_is_not_initialized___impl( void* self );
int egl___EGLError_is_bad_access___impl( void* self );
int egl___EGLError_is_bad_alloc___impl( void* self );
int egl___EGLError_is_bad_attribute___impl( void* self );
int egl___EGLError_is_bad_config___impl( void* self );
int egl___EGLError_is_bad_context___impl( void* self );
int egl___EGLError_is_bad_current_surface___impl( void* self );
int egl___EGLError_is_bad_display___impl( void* self );
int egl___EGLError_is_bad_match___impl( void* self );
int egl___EGLError_is_bad_native_pixmap___impl( void* self );
int egl___EGLError_is_bad_native_window___impl( void* self );
int egl___EGLError_is_bad_parameter___impl( void* self );
int egl___EGLError_is_bad_surface___impl( void* self );
int egl___EGLError_is_context_lost___impl( void* self );
extern const int COLOR_egl__EGLError__is_not_initialized;
extern const int COLOR_egl__EGLError__is_bad_access;
extern const int COLOR_egl__EGLError__is_bad_alloc;
extern const int COLOR_egl__EGLError__is_bad_attribute;
extern const int COLOR_egl__EGLError__is_bad_config;
extern const int COLOR_egl__EGLError__is_bad_context;
extern const int COLOR_egl__EGLError__is_bad_current_surface;
extern const int COLOR_egl__EGLError__is_bad_display;
extern const int COLOR_egl__EGLError__is_bad_match;
extern const int COLOR_egl__EGLError__is_bad_native_pixmap;
extern const int COLOR_egl__EGLError__is_bad_native_window;
extern const int COLOR_egl__EGLError__is_bad_parameter;
extern const int COLOR_egl__EGLError__is_bad_surface;
extern const int COLOR_egl__EGLError__is_context_lost;
extern const struct type type_egl__EGLContextAttribute;
extern const struct class class_egl__EGLContextAttribute;
void* egl___new_EGLContextAttribute_buffer_size___impl(  );
void* egl___new_EGLContextAttribute_alpha_size___impl(  );
void* egl___new_EGLContextAttribute_blue_size___impl(  );
void* egl___new_EGLContextAttribute_green_size___impl(  );
void* egl___new_EGLContextAttribute_red_size___impl(  );
void* egl___new_EGLContextAttribute_depth_size___impl(  );
void* egl___new_EGLContextAttribute_stencil_size___impl(  );
void* egl___new_EGLContextAttribute_config_caveat___impl(  );
void* egl___new_EGLContextAttribute_config_id___impl(  );
void* egl___new_EGLContextAttribute_level___impl(  );
void* egl___new_EGLContextAttribute_max_pbuffer_height___impl(  );
void* egl___new_EGLContextAttribute_max_pbuffer_pixels___impl(  );
void* egl___new_EGLContextAttribute_max_pbuffer_width___impl(  );
void* egl___new_EGLContextAttribute_native_renderable___impl(  );
void* egl___new_EGLContextAttribute_native_visual_id___impl(  );
void* egl___new_EGLContextAttribute_native_visual_type___impl(  );
void* egl___new_EGLContextAttribute_samples___impl(  );
void* egl___new_EGLContextAttribute_sample_buffers___impl(  );
void* egl___new_EGLContextAttribute_surface_type___impl(  );
void* egl___new_EGLContextAttribute_transparent_type___impl(  );
void* egl___new_EGLContextAttribute_transparent_blue_value___impl(  );
void* egl___new_EGLContextAttribute_transparent_green_value___impl(  );
void* egl___new_EGLContextAttribute_transparent_red_value___impl(  );
void* egl___new_EGLContextAttribute_bind_to_texture_rgb___impl(  );
void* egl___new_EGLContextAttribute_bind_to_texture_rgba___impl(  );
void* egl___new_EGLContextAttribute_min_swap_interval___impl(  );
void* egl___new_EGLContextAttribute_max_swap_interval___impl(  );
void* egl___new_EGLContextAttribute_limunance_size___impl(  );
void* egl___new_EGLContextAttribute_alpha_mask_size___impl(  );
void* egl___new_EGLContextAttribute_color_buffer_type___impl(  );
void* egl___new_EGLContextAttribute_renderable_type___impl(  );
void* egl___new_EGLContextAttribute_match_native_pixmap___impl(  );
void* egl___new_EGLContextAttribute_conformant___impl(  );
void* egl___new_EGLContextAttribute_none___impl(  );
extern const int COLOR_egl__EGLConfigChooser___array;
extern const int COLOR_egl__EGLConfigChooser___closed;
extern const int COLOR_egl__EGLConfigChooser___inserted_attribs;
extern const int COLOR_egl__EGLConfigChooser__inserted_attribs;
extern const int COLOR_core__abstract_collection__Collection__has;
extern const int COLOR_egl__EGLConfigChooser__array;
extern const int COLOR_egl__EGLConfigChooser__insert_attrib_key;
extern const int COLOR_egl__EGLConfigChooser__closed_61d;
extern const int COLOR_egl__EGLConfigChooser__insert_attrib_with_val;
extern const int COLOR_egl__EGLConfigChooser__surface_type_61d;
extern const int COLOR_egl__EGLConfigChooser__renderable_type_61d;
extern const int COLOR_egl__EGLConfigCaveat__to_i;
extern const int COLOR_egl__EGLConformant__to_i;
extern const int COLOR_egl__EGLConfigChooser__closed;
extern const int COLOR_egl__EGLDisplay__choose_configs;
int egl___Sys_egl_bind_opengl_api___impl( struct nitni_instance * self );
int egl___Sys_egl_bind_opengl_es_api___impl( struct nitni_instance * self );
int egl___Sys_egl_bind_openvg_api___impl( struct nitni_instance * self );
extern const struct type type_core__Pointer;
extern const struct class class_core__Pointer;
void* egl___Sys_egl_default_display___impl( struct nitni_instance * self );
