#include "nit.common.h"
extern const int COLOR_physique__world__World___entities;
extern const char FILE_physique__world[];
extern const int COLOR_physique__world__World___forces_applied;
extern const int COLOR_physique__world__World__entities;
extern const int COLOR_core__abstract_collection__SimpleCollection__add;
extern const int COLOR_physique__world__World__load_entity;
extern const int COLOR_physique__nitSimulation__Entity__texture;
extern const int COLOR_gamnit__textures__Texture__load;
extern const int COLOR_physique__world__World__forces_applied;
extern const int COLOR_physique__world__World__apply_forces_entities;
extern const int COLOR_core__abstract_collection__Collection__length;
extern const struct type type_core__Int;
extern const char FILE_core__kernel[];
extern const int COLOR_core__abstract_collection__SequenceRead___91d_93d;
extern const int COLOR_physique__world__World__check_collision;
long core___core__Int___Discrete__successor(long self, long p0);
extern const int COLOR_core__abstract_collection__Collection__iterator;
extern const int COLOR_core__abstract_collection__Iterator__is_ok;
extern const int COLOR_core__abstract_collection__Iterator__item;
extern const int COLOR_physique__nitSimulation__Entity__update;
extern const int COLOR_core__abstract_collection__Iterator__next;
extern const int COLOR_core__abstract_collection__Iterator__finish;
val* NEW_physique__Collision(const struct type* type);
extern const struct type type_physique__Collision;
extern const int COLOR_core__kernel__Object__init;
extern const int COLOR_physique__nitPhysics__Collision__check_collision;
extern const int COLOR_physique__nitPhysics__Force__apply_force;
extern const int COLOR_core__kernel__Object___61d_61d;
extern const int COLOR_physique__nitSimulation__Entity__vector;
extern const int COLOR_physique__nitConstraints__Vector_95d2d__v_x;
extern const struct type type_core__Float;
extern const int COLOR_physique__nitConstraints__Vector_95d2d__v_x_61d;
