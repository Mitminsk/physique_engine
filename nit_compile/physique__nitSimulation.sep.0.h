#include "nit.common.h"
extern const int COLOR_physique__nitSimulation__Entity___position;
extern const char FILE_physique__nitSimulation[];
extern const int COLOR_physique__nitSimulation__Entity___dimensions;
extern const int COLOR_physique__nitSimulation__Entity___mass;
extern const int COLOR_physique__nitSimulation__Entity___is_dynamic;
extern const int COLOR_physique__nitSimulation__Entity___is_moovable;
extern const int COLOR_physique__nitSimulation__Entity___is_colision;
extern const int COLOR_physique__nitSimulation__Entity___vector;
extern const int COLOR_physique__nitSimulation__Entity___texture;
extern const int COLOR_physique___physique__Entity___core__kernel__Object__init;
val* NEW_physique__Vector_95d2d(const struct type* type);
extern const struct type type_physique__Vector_95d2d;
extern const int COLOR_physique__nitConstraints__Vector_95d2d__v_x_61d;
extern const int COLOR_physique__nitConstraints__Vector_95d2d__v_y_61d;
extern const int COLOR_core__kernel__Object__init;
extern const int COLOR_physique__nitSimulation__Entity__vector_61d;
val* NEW_physique__Dimensions_95d2d(const struct type* type);
extern const struct type type_physique__Dimensions_95d2d;
extern const int COLOR_physique__nitConstraints__Dimensions_95d2d__height_61d;
extern const int COLOR_physique__nitConstraints__Dimensions_95d2d__width_61d;
extern const int COLOR_physique__nitSimulation__Entity__dimensions_61d;
extern const int COLOR_physique__nitSimulation__Entity__is_dynamic_61d;
extern const int COLOR_physique__nitSimulation__Entity__update_position;
extern const int COLOR_physique__nitSimulation__Entity__is_dynamic;
extern const int COLOR_physique__nitSimulation__Entity__position;
extern const int COLOR_geometry__points_and_lines__IPoint__x;
extern const int COLOR_physique__nitSimulation__Entity__vector;
extern const int COLOR_physique__nitConstraints__Vector_95d2d__v_x;
extern const struct type type_core__Float;
extern const char FILE_core__kernel[];
val* BOX_core__Float(double);
extern const int COLOR_geometry__points_and_lines__Point__x_61d;
extern const int COLOR_geometry__points_and_lines__IPoint__y;
extern const int COLOR_physique__nitConstraints__Vector_95d2d__v_y;
extern const int COLOR_geometry__points_and_lines__Point__y_61d;
extern const int COLOR_physique__nitSimulation__Entity__dimensions;
extern const int COLOR_physique__nitConstraints__Dimensions_95d2d__height;
extern const int COLOR_physique__nitConstraints__Dimensions_95d2d__width;
extern const int COLOR_physique__nitSimulation__Shape___volume;
extern const int COLOR_physique__nitSimulation__Shape___density;
extern const int COLOR_physique___physique__Shape___core__kernel__Object__init;
extern const int COLOR_physique__nitSimulation__Shape__compute_volume;
extern const int COLOR_physique__nitSimulation__Shape__compute_mass;
extern const int COLOR_physique__nitSimulation__Shape__density_61d;
extern const int COLOR_physique__nitSimulation__Shape__volume;
extern const int COLOR_physique__nitSimulation__Shape__density;
extern const int COLOR_physique__nitSimulation__Entity__mass_61d;
extern const int COLOR_physique__nitSimulation__Polygone___vertices;
extern const int COLOR_physique___physique__Polygone___core__kernel__Object__init;
extern const int COLOR_physique__nitSimulation__Entity__is_moovable_61d;
extern const int COLOR_physique__nitSimulation__Polygone__compute_vertices;
extern const int COLOR_physique__nitSimulation__Shape__volume_61d;
extern const int COLOR_physique__nitSimulation__Polygone__vertices;
val* NEW_geometry__Point3d(const struct type* type);
extern const struct type type_geometry__Point3d__core__Float;
double core___core__Float___Numeric__to_f(double self);
extern const int COLOR_geometry__points_and_lines__Point3d__z_61d;
extern const int COLOR_core__abstract_collection__SimpleCollection__add;
extern const int COLOR_physique__nitSimulation__Circle___radius;
extern const int COLOR_physique__nitSimulation__Circle___coef_elas;
extern const int COLOR_physique___physique__Circle___core__kernel__Object__init;
extern const int COLOR_physique__nitSimulation__Circle__radius_61d;
extern const int COLOR_physique__nitSimulation__Circle__coef_elas_61d;
extern const int COLOR_physique__nitSimulation__Circle__radius;
extern const int COLOR_physique__nitSimulation__Entity__set_dimensions;
double core__math___Float___sqrt(double self);
double core__math___Float___pow(double self, double p0);
extern const int COLOR_physique__nitSimulation__Player___name;
extern const int COLOR_physique___physique__Player___core__kernel__Object__init;
extern const int COLOR_physique__nitSimulation__Player__check_limit;
double core__math___Float___abs(double self);
