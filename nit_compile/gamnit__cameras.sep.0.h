#include "nit.common.h"
extern const int COLOR_gamnit__cameras__Camera___display;
extern const char FILE_gamnit__cameras[];
extern const int COLOR_gamnit__cameras__Camera___position;
extern const int COLOR_gamnit___gamnit__Camera___core__kernel__Object__init;
extern const int COLOR_gamnit__cameras__EulerCamera___pitch;
extern const int COLOR_gamnit__cameras__EulerCamera___yaw;
extern const int COLOR_gamnit__cameras__EulerCamera___roll;
extern const int COLOR_gamnit__cameras__EulerCamera___field_of_view_y;
extern const int COLOR_gamnit__cameras__EulerCamera___near;
extern const int COLOR_gamnit__cameras__EulerCamera___far;
extern const int COLOR_gamnit__cameras__EulerCamera___sensitivity;
extern const int COLOR_gamnit__cameras__EulerCamera__yaw;
extern const int COLOR_gamnit__cameras__EulerCamera__sensitivity;
extern const struct type type_core__Float;
extern const char FILE_core__kernel[];
extern const int COLOR_gamnit__cameras__EulerCamera__yaw_61d;
extern const int COLOR_gamnit__cameras__EulerCamera__pitch;
extern const int COLOR_gamnit__cameras__EulerCamera__pitch_61d;
extern const int COLOR_core__math__Sys__pi;
double core___core__Float___Comparable__min(double self, double p0);
double core___core__Float___Comparable__max(double self, double p0);
extern const int COLOR_gamnit__cameras__Camera__position;
extern const int COLOR_geometry__points_and_lines__IPoint__x;
double core__math___Float___sin(double self);
val* BOX_core__Float(double);
extern const int COLOR_geometry__points_and_lines__Point__x_61d;
extern const int COLOR_geometry__points_and_lines__IPoint3d__z;
double core__math___Float___cos(double self);
extern const int COLOR_geometry__points_and_lines__Point3d__z_61d;
extern const int COLOR_geometry__points_and_lines__IPoint__y;
extern const int COLOR_geometry__points_and_lines__Point__y_61d;
extern const int COLOR_core__math__Sys__atan2;
val* NEW_matrix__Matrix(const struct type* type);
extern const struct type type_matrix__Matrix;
extern const int COLOR_matrix__Matrix__identity;
extern const int COLOR_matrix__projection__Matrix__rotate;
extern const int COLOR_gamnit__cameras__EulerCamera__roll;
extern const int COLOR_matrix__projection__Matrix__translate;
extern const int COLOR_gamnit__cameras__EulerCamera__rotation_matrix;
extern const int COLOR_matrix__Matrix___42d;
extern const int COLOR_gamnit__cameras__EulerCamera__field_of_view_y;
extern const int COLOR_gamnit__cameras__Camera__display;
extern const int COLOR_gamnit__display__GamnitDisplay__aspect_ratio;
extern const int COLOR_gamnit__cameras__EulerCamera__near;
extern const int COLOR_gamnit__cameras__EulerCamera__far;
extern const int COLOR_matrix__projection__Matrix__perspective;
extern const int COLOR_gamnit__display__GamnitDisplay__height;
double core__math___Float___tan(double self);
extern const int COLOR_gamnit__cameras__EulerCamera__roll_61d;
extern const int COLOR_gamnit__cameras__UICamera___near;
extern const int COLOR_gamnit__cameras__UICamera___far;
extern const int COLOR_gamnit__cameras__UICamera__lazy_32d_width;
extern const int COLOR_gamnit__cameras__UICamera___width;
extern const int COLOR_gamnit__display__GamnitDisplay__width;
extern const int COLOR_gamnit__cameras__UICamera__lazy_32d_height;
extern const int COLOR_gamnit__cameras__UICamera___height;
extern const int COLOR_gamnit__cameras__UICamera__height_61d;
extern const int COLOR_gamnit__cameras__UICamera__width_61d;
extern const int COLOR_core__kernel__Numeric__to_f;
extern const int COLOR_gamnit__cameras__UICamera__width;
extern const int COLOR_gamnit__cameras__UICamera__height;
val* NEW_geometry__Point(const struct type* type);
extern const struct type type_geometry__Point__core__Float;
extern const int COLOR_core__kernel__Object__init;
val* NEW_geometry__Point3d(const struct type* type);
extern const struct type type_geometry__Point3d__core__Float;
extern const int COLOR_gamnit__cameras__UICamera__near;
extern const int COLOR_gamnit__cameras__UICamera__far;
extern const int COLOR_matrix__projection__Matrix__orthogonal;
