#include "nit.common.h"
val* BOX_core__Pointer(void*);
extern const struct type type_glesv2__GLProgram;
extern const struct class class_glesv2__GLProgram;
void* glesv2___new_GLProgram___impl(  );
void glesv2___GLProgram_bind_attrib_location___impl( void* self, long index, struct nitni_instance * name );
extern const int COLOR_core__abstract_text__Text__to_cstring;
long glesv2___GLProgram_attrib_location___impl( void* self, struct nitni_instance * name );
long glesv2___GLProgram_uniform_location___impl( void* self, struct nitni_instance * name );
extern const int COLOR_glesv2__Sys__gl_LINK_STATUS;
extern const int COLOR_glesv2__Sys__glGetProgramiv;
extern const int COLOR_glesv2__Sys__gl_DELETE_STATUS;
extern const int COLOR_glesv2__Sys__gl_VALIDATE_STATUS;
extern const int COLOR_glesv2__Sys__gl_ACTIVE_UNIFORMS;
extern const int COLOR_glesv2__Sys__gl_ACTIVE_UNIFORM_MAX_LENGTH;
extern const int COLOR_glesv2__Sys__gl_ACTIVE_ATTRIBUTES;
extern const int COLOR_glesv2__Sys__gl_ACTIVE_ATTRIBUTE_MAX_LENGTH;
extern const int COLOR_glesv2__Sys__gl_ATTACHED_SHADERS;
extern const int COLOR_glesv2__GLProgram__active_attribute_max_length;
extern const int COLOR_glesv2__GLProgram__active_attrib_name_native;
val* core__flat___NativeString___core__abstract_text__Object__to_s(char* self);
void glesv2___GLProgram_active_attrib_name_native___impl( void* self, long index, long max_size, char* name );
long glesv2___GLProgram_active_attrib_size___impl( void* self, long index );
extern const struct type type_glesv2__GLDataType;
extern const struct class class_glesv2__GLDataType;
void* glesv2___GLProgram_active_attrib_type___impl( void* self, long index );
extern const int COLOR_glesv2__GLProgram__active_uniform_max_length;
extern const int COLOR_glesv2__GLProgram__active_uniform_name_native;
void glesv2___GLProgram_active_uniform_name_native___impl( void* self, long index, long max_size, char* name );
long glesv2___GLProgram_active_uniform_size___impl( void* self, long index );
void* glesv2___GLProgram_active_uniform_type___impl( void* self, long index );
extern const int COLOR_glesv2__Sys__gl_SHADER_SOURCE_LENGTH;
extern const int COLOR_glesv2__Sys__glGetShaderiv;
extern const int COLOR_glesv2__GLShader__source_native;
char* glesv2___GLShader_source_native___impl( void* self, long size );
extern const int COLOR_glesv2__Sys__gl_COMPILE_STATUS;
extern const struct type type_glesv2__GLFragmentShader;
extern const struct class class_glesv2__GLFragmentShader;
void* glesv2___new_GLFragmentShader___impl(  );
extern const struct type type_glesv2__GLVertexShader;
extern const struct class class_glesv2__GLVertexShader;
void* glesv2___new_GLVertexShader___impl(  );
extern const int COLOR_glesv2__VertexArray___index;
extern const int COLOR_glesv2__VertexArray___count;
extern const int COLOR_glesv2__VertexArray___glfloat_array;
extern const char FILE_glesv2[];
extern const int COLOR_core__kernel__Object__init;
extern const int COLOR_glesv2__VertexArray__index_61d;
extern const int COLOR_glesv2__VertexArray__count_61d;
val* NEW_glesv2__NativeGLfloatArray(const struct type* type);
extern const struct type type_glesv2__NativeGLfloatArray;
extern const int COLOR_core__abstract_collection__Collection__length;
extern const int COLOR_glesv2__NativeGLfloatArray__new;
extern const int COLOR_glesv2__VertexArray__glfloat_array_61d;
extern const struct type type_core__Int;
extern const char FILE_core__kernel[];
extern const int COLOR_glesv2__VertexArray__glfloat_array;
extern const int COLOR_core__abstract_collection__SequenceRead___91d_93d;
extern const int COLOR_c__NativeCArray___91d_93d_61d;
long core___core__Int___Discrete__successor(long self, long p0);
extern const int COLOR_glesv2__VertexArray__index;
extern const int COLOR_glesv2__VertexArray__count;
extern const int COLOR_glesv2__VertexArray__attrib_pointer_intern;
void glesv2___VertexArray_attrib_pointer_intern___impl( struct nitni_instance * self, long index, long count, void* array );
extern const int COLOR_glesv2__Sys__glEnableVertexAttribArray;
extern const int COLOR_glesv2__Sys__glDisableVertexAttribArray;
extern const int COLOR_glesv2___glesv2__GLfloatArray___c__CArray__init;
extern const int COLOR_c__CArray__NATIVE;
extern const int COLOR_c__CArray__native_array_61d;
val* NEW_glesv2__GLfloatArray(const struct type* type);
extern const struct type type_glesv2__GLfloatArray;
extern const int COLOR_c__CArray__init;
extern const int COLOR_glesv2__GLfloatArray__fill_from;
extern const int COLOR_c__CArray___91d_93d_61d;
extern const struct class class_glesv2__NativeGLfloatArray;
void* glesv2___new_NativeGLfloatArray___impl( long size );
double glesv2___NativeGLfloatArray__index___impl( void* self, long index );
double glesv2___glesv2__NativeGLfloatArray___c__NativeCArray___91d_93d(val* self, long p0);
val* BOX_core__Float(double);
extern const struct type type_core__Float;
void glesv2___NativeGLfloatArray__index_assign___impl( void* self, long index, double val );
void glesv2___glesv2__NativeGLfloatArray___c__NativeCArray___91d_93d_61d(val* self, long p0, double p1);
void* glesv2___NativeGLfloatArray__plus___impl( void* self, long offset );
long glesv2___GLEnum_hash___impl( void* self );
extern const int COLOR_core__kernel__Object___33d_61d;
extern const int COLOR_core__kernel__Object__hash;
extern const int COLOR_glesv2__Sys__gl_NO_ERROR;
extern const int COLOR_core__kernel__Object___61d_61d;
val* core__flat___NativeString___to_s_full(char* self, long p0, long p1);
extern const int COLOR_glesv2__Sys__gl_INVALID_ENUM;
extern const int COLOR_glesv2__Sys__gl_INVALID_VALUE;
extern const int COLOR_glesv2__Sys__gl_INVALID_OPERATION;
extern const int COLOR_glesv2__Sys__gl_INVALID_FRAMEBUFFER_OPERATION;
extern const int COLOR_glesv2__Sys__gl_OUT_OF_MEMORY;
extern const int COLOR_glesv2__GLCap___val;
extern const int COLOR_glesv2__GLCap__val;
extern const int COLOR_glesv2__GLCap__enable_native;
void glesv2___GLCap_enable_native___impl( struct nitni_instance * self, long cap );
extern const int COLOR_glesv2__GLCap__disable_native;
void glesv2___GLCap_disable_native___impl( struct nitni_instance * self, long cap );
extern const int COLOR_glesv2___glesv2__GLCap___core__kernel__Object__init;
extern const int COLOR_glesv2__Sys___gles;
val* NEW_glesv2__GLES(const struct type* type);
extern const struct type type_glesv2__GLES;
void* glesv2___Sys_glCreateProgram___impl( struct nitni_instance * self );
void glesv2___Sys_glUseProgram___impl( struct nitni_instance * self, void* program );
void glesv2___Sys_glLinkProgram___impl( struct nitni_instance * self, void* program );
void glesv2___Sys_glValidateProgram___impl( struct nitni_instance * self, void* program );
void glesv2___Sys_glDeleteProgram___impl( struct nitni_instance * self, void* program );
int glesv2___Sys_glIsProgram___impl( struct nitni_instance * self, void* name );
void glesv2___Sys_glAttachShader___impl( struct nitni_instance * self, void* program, void* shader );
void glesv2___Sys_glDetachShader___impl( struct nitni_instance * self, void* program, void* shader );
long glesv2___Sys_glGetProgramiv___impl( struct nitni_instance * self, void* program, void* pname );
extern const int COLOR_glesv2__Sys__gl_INFO_LOG_LENGTH;
extern const int COLOR_glesv2__Sys__native_glGetProgramInfoLog;
val* core__flat___NativeString___to_s_with_length(char* self, long p0);
long glesv2___Sys_native_glGetProgramInfoLog___impl( struct nitni_instance * self, void* program, long buf_size, char* buf );
long glesv2___Sys_glGetShaderiv___impl( struct nitni_instance * self, void* shader, void* pname );
extern const struct type type_glesv2__GLGetParameterName;
extern const struct class class_glesv2__GLGetParameterName;
void* glesv2___Sys_gl_INFO_LOG_LENGTH___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_DELETE_STATUS___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_SHADER_TYPE___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_COMPILE_STATUS___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_SHADER_SOURCE_LENGTH___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_ACTIVE_ATTRIBUTES___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_ACTIVE_ATTRIBUTE_MAX_LENGTH___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_ACTIVE_UNIFORMS___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_ACTIVE_UNIFORM_MAX_LENGTH___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_ATTACHED_SHADERS___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_LINK_STATUS___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_VALIDATE_STATUS___impl( struct nitni_instance * self );
extern const int COLOR_glesv2__Sys__native_glGetShaderInfoLog;
long glesv2___Sys_native_glGetShaderInfoLog___impl( struct nitni_instance * self, void* shader, long buf_size, char* buffer );
extern const struct type type_glesv2__GLShaderType;
extern const struct class class_glesv2__GLShaderType;
void* glesv2___Sys_gl_VERTEX_SHADER___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_FRAGMENT_SHADER___impl( struct nitni_instance * self );
extern const struct type type_glesv2__GLShader;
extern const struct class class_glesv2__GLShader;
void* glesv2___Sys_glCreateShader___impl( struct nitni_instance * self, void* shader_type );
void glesv2___Sys_glShaderSource___impl( struct nitni_instance * self, void* shader, char* code );
void glesv2___Sys_glCompileShader___impl( struct nitni_instance * self, void* shader );
void glesv2___Sys_glDeleteShader___impl( struct nitni_instance * self, void* shader );
int glesv2___Sys_glIsShader___impl( struct nitni_instance * self, void* name );
void glesv2___Sys_glEnableVertexAttribArray___impl( struct nitni_instance * self, long index );
void glesv2___Sys_glDisableVertexAttribArray___impl( struct nitni_instance * self, long index );
void glesv2___Sys_glDrawArrays___impl( struct nitni_instance * self, void* mode, long from, long count );
void glesv2___Sys_glDrawElements___impl( struct nitni_instance * self, void* mode, long count, void* typ, void* indices );
void glesv2___Sys_glVertexAttribPointer___impl( struct nitni_instance * self, long index, long size, void* typ, int normalized, long stride, void* array );
void glesv2___Sys_glVertexAttrib1f___impl( struct nitni_instance * self, long index, double x );
void glesv2___Sys_glVertexAttrib2f___impl( struct nitni_instance * self, long index, double x, double y );
void glesv2___Sys_glVertexAttrib3f___impl( struct nitni_instance * self, long index, double x, double y, double z );
void glesv2___Sys_glVertexAttrib4f___impl( struct nitni_instance * self, long index, double x, double y, double z, double w );
void glesv2___Sys_glUniform1i___impl( struct nitni_instance * self, long index, long x );
void glesv2___Sys_glUniform2i___impl( struct nitni_instance * self, long index, long x, long y );
void glesv2___Sys_glUniform3i___impl( struct nitni_instance * self, long index, long x, long y, long z );
void glesv2___Sys_glUniform4i___impl( struct nitni_instance * self, long index, long x, long y, long z, long w );
void glesv2___Sys_glUniform1f___impl( struct nitni_instance * self, long index, double x );
void glesv2___Sys_glUniform2f___impl( struct nitni_instance * self, long index, double x, double y );
void glesv2___Sys_glUniform3f___impl( struct nitni_instance * self, long index, double x, double y, double z );
void glesv2___Sys_glUniform4f___impl( struct nitni_instance * self, long index, double x, double y, double z, double w );
extern const struct type type_glesv2__GLError;
extern const struct class class_glesv2__GLError;
void* glesv2___Sys_glGetError___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_NO_ERROR___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_INVALID_ENUM___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_INVALID_VALUE___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_INVALID_OPERATION___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_INVALID_FRAMEBUFFER_OPERATION___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_OUT_OF_MEMORY___impl( struct nitni_instance * self );
extern const int COLOR_glesv2__Sys__glGetError;
val* NEW_core__NativeArray(int length, const struct type* type);
extern const struct type type_core__NativeArray__core__String;
extern const int COLOR_core__abstract_text__Object__to_s;
extern const int COLOR_core__abstract_text__NativeArray__native_to_s;
extern const int COLOR_core__file__Sys__print;
extern const struct type type_glesv2__GLTextureUnit;
extern const struct class class_glesv2__GLTextureUnit;
void* glesv2___Sys_gl_TEXTURE0___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_TEXTURE1___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_TEXTURE2___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_TEXTURE3___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_TEXTURE4___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_TEXTURE5___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_TEXTURE6___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_TEXTURE7___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_TEXTURE8___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_TEXTURE9___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_TEXTURE10___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_TEXTURE11___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_TEXTURE12___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_TEXTURE13___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_TEXTURE14___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_TEXTURE15___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_TEXTURE16___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_TEXTURE17___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_TEXTURE18___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_TEXTURE19___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_TEXTURE20___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_TEXTURE21___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_TEXTURE22___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_TEXTURE23___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_TEXTURE24___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_TEXTURE25___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_TEXTURE26___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_TEXTURE27___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_TEXTURE28___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_TEXTURE29___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_TEXTURE30___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_TEXTURE31___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_TEXTURE___impl( struct nitni_instance * self, long offset );
val* NEW_c__CIntArray(const struct type* type);
extern const struct type type_c__CIntArray;
extern const int COLOR_c__CIntArray__init;
extern const int COLOR_c__CArray__native_array;
extern const int COLOR_glesv2__Sys__native_glGenTextures;
extern const int COLOR_core__array__Collection__to_a;
extern const int COLOR_c__CArray__destroy;
void glesv2___Sys_native_glGenTextures___impl( struct nitni_instance * self, long n, void* textures );
void glesv2___Sys_glActiveTexture___impl( struct nitni_instance * self, void* texture );
void glesv2___Sys_glBindTexture___impl( struct nitni_instance * self, void* target, long texture );
extern const int COLOR_c__CIntArray__from;
extern const int COLOR_glesv2__Sys__native_glDeleteTextures;
void glesv2___Sys_native_glDeleteTextures___impl( struct nitni_instance * self, long n, void* textures );
int glesv2___Sys_glIsTexture___impl( struct nitni_instance * self, long name );
void glesv2___Sys_glPixelStorei___impl( struct nitni_instance * self, void* parameter, long val );
extern const struct type type_glesv2__GLPack;
extern const struct class class_glesv2__GLPack;
void* glesv2___Sys_gl_PACK_ALIGNEMENT___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_UNPACK_ALIGNEMENT___impl( struct nitni_instance * self );
void glesv2___Sys_glTexImage2D___impl( struct nitni_instance * self, void* target, long level, void* internalformat, long width, long height, long border, void* format, void* typ, void* data );
void glesv2___Sys_glTexSubImage2D___impl( struct nitni_instance * self, void* target, long level, long xoffset, long yoffset, long width, long height, long border, void* format, void* typ, void* data );
void glesv2___Sys_glCopyTexImage2D___impl( struct nitni_instance * self, void* target, long level, void* internalformat, long x, long y, long width, long height, long border );
void glesv2___Sys_glCopyTexSubImage2D___impl( struct nitni_instance * self, void* target, long level, long xoffset, long yoffset, long x, long y, long width, long height );
void glesv2___Sys_glReadPixels___impl( struct nitni_instance * self, long x, long y, long width, long height, void* format, void* typ, void* data );
extern const struct type type_glesv2__GLTexParameteri;
extern const struct class class_glesv2__GLTexParameteri;
void* glesv2___Sys_gl_NEAREST___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_LINEAR___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_NEAREST_MIPMAP_NEAREST___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_LINEAR_MIPMAP_NEAREST___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_NEAREST_MIPMAP_NINEAR___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_LINEAR_MIPMAP_LINEAR___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_CLAMP_TO_EDGE___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_MIRRORED_REPEAT___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_REPEAT___impl( struct nitni_instance * self );
extern const struct type type_glesv2__GLTextureTarget;
extern const struct class class_glesv2__GLTextureTarget;
void* glesv2___Sys_gl_TEXTURE_2D___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_TEXTURE_CUBE_MAP___impl( struct nitni_instance * self );
extern const int COLOR_glesv2__Sys__native_glGenRenderbuffers;
void glesv2___Sys_native_glGenRenderbuffers___impl( struct nitni_instance * self, long n, void* renderbuffers );
int glesv2___Sys_glIsRenderbuffer___impl( struct nitni_instance * self, long name );
extern const int COLOR_glesv2__Sys__native_glDeleteRenderbuffers;
void glesv2___Sys_native_glDeleteRenderbuffers___impl( struct nitni_instance * self, long n, void* renderbuffers );
void glesv2___Sys_glFramebufferRenderbuffer___impl( struct nitni_instance * self, void* target, void* attachment, void* renderbuffertarget, long renderbuffer );
void glesv2___Sys_glRenderbufferStorage___impl( struct nitni_instance * self, void* target, void* format, long width, long height );
extern const struct type type_glesv2__GLRenderbufferFormat;
extern const struct class class_glesv2__GLRenderbufferFormat;
void* glesv2___Sys_gl_RGBA4___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_RGB565___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_RGB_A1___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_DEPTH_COMPNENT16___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_STENCIL_INDEX8___impl( struct nitni_instance * self );
extern const struct type type_glesv2__GLAttachment;
extern const struct class class_glesv2__GLAttachment;
void* glesv2___Sys_gl_COLOR_ATTACHMENT0___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_DEPTH_ATTACHMENT___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_STENCIL_ATTACHMENT___impl( struct nitni_instance * self );
extern const int COLOR_glesv2__Sys__gles;
void glesv2___Sys_glClearColor___impl( struct nitni_instance * self, double red, double green, double blue, double alpha );
void glesv2___Sys_glClearDepthf___impl( struct nitni_instance * self, double value );
void glesv2___Sys_glClearStencil___impl( struct nitni_instance * self, long value );
void glesv2___Sys_glClear___impl( struct nitni_instance * self, void* buffer );
void glesv2___Sys_glColorMask___impl( struct nitni_instance * self, int red, int green, int blue, int alpha );
void glesv2___Sys_glViewport___impl( struct nitni_instance * self, long x, long y, long width, long height );
void glesv2___Sys_glFinish___impl( struct nitni_instance * self );
void glesv2___Sys_glFlush___impl( struct nitni_instance * self );
void glesv2___Sys_glTexParameteri___impl( struct nitni_instance * self, void* target, void* pname, void* param );
extern const struct type type_glesv2__GLTexParameteriName;
extern const struct class class_glesv2__GLTexParameteriName;
void* glesv2___Sys_gl_TEXTURE_MIN_FILTER___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_TEXTURE_MAG_FILTER___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_TEXTURE_WRAP_S___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_TEXTURE_WRAP_T___impl( struct nitni_instance * self );
void glesv2___Sys_glBindFramebuffer___impl( struct nitni_instance * self, void* target, long framebuffer );
extern const struct type type_glesv2__GLFramebufferTarget;
extern const struct class class_glesv2__GLFramebufferTarget;
void* glesv2___Sys_gl_FRAMEBUFFER___impl( struct nitni_instance * self );
void glesv2___Sys_glBindRenderbuffer___impl( struct nitni_instance * self, void* target, long renderbuffer );
extern const struct type type_glesv2__GLRenderbufferTarget;
extern const struct class class_glesv2__GLRenderbufferTarget;
void* glesv2___Sys_gl_RENDERBUFFER___impl( struct nitni_instance * self );
void glesv2___Sys_glHint___impl( struct nitni_instance * self, void* target, void* mode );
void glesv2___Sys_glGenerateMipmap___impl( struct nitni_instance * self, void* target );
void glesv2___Sys_glBindBuffer___impl( struct nitni_instance * self, void* target, long buffer );
extern const struct type type_glesv2__GLArrayBuffer;
extern const struct class class_glesv2__GLArrayBuffer;
void* glesv2___Sys_gl_ARRAY_BUFFER___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_ELEMENT_ARRAY_BUFFER___impl( struct nitni_instance * self );
extern const struct type type_glesv2__GLFramebufferStatus;
extern const struct class class_glesv2__GLFramebufferStatus;
void* glesv2___Sys_glCheckFramebufferStatus___impl( struct nitni_instance * self, void* target );
void* glesv2___Sys_gl_FRAMEBUFFER_COMPLETE___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_FRAMEBUFFER_INCOMPLETE_ATTACHMENT___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_FRAMEBUFFER_INCOMPLETE_DIMENSIONS___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_FRAMEBUFFER_UNSUPPORTED___impl( struct nitni_instance * self );
extern const struct type type_glesv2__GLHintTarget;
extern const struct class class_glesv2__GLHintTarget;
void* glesv2___Sys_gl_GENERATE_MIPMAP_HINT___impl( struct nitni_instance * self );
extern const struct type type_glesv2__GLHintMode;
extern const struct class class_glesv2__GLHintMode;
void* glesv2___Sys_gl_FASTEST___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_NICEST___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_DONT_CARE___impl( struct nitni_instance * self );
extern const int COLOR_glesv2__Sys__native_glGenFramebuffers;
void glesv2___Sys_native_glGenFramebuffers___impl( struct nitni_instance * self, long n, void* textures );
int glesv2___Sys_glIsFramebuffer___impl( struct nitni_instance * self, long name );
extern const int COLOR_glesv2__Sys__native_glDeleteFramebuffers;
void glesv2___Sys_native_glDeleteFramebuffers___impl( struct nitni_instance * self, long n, void* framebuffers );
void glesv2___Sys_glFramebufferTexture2D___impl( struct nitni_instance * self, void* target, void* attachment, void* texture_target, long texture, long level );
void* glesv2___Sys_gl_FLOAT___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_FLOAT_VEC2___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_FLOAT_VEC3___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_FLOAT_VEC4___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_FLOAT_MAT2___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_FLOAT_MAT3___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_FLOAT_MAT4___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_BYTE___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_UNSIGNED_BYTE___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_SHORT___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_UNSIGNED_SHORT___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_INT___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_UNSIGNED_INT___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_FIXED___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_INT_VEC2___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_INT_VEC3___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_INT_VEC4___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_BOOL___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_BOOL_VEC2___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_BOOL_VEC3___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_BOOL_VEC4___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_SAMPLER_2D___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_SAMPLER_CUBE___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_UNSIGNED_SHORT_5_6_5___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_UNSIGNED_SHORT_4_4_4_4___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_UNSIGNED_SHORT_5_5_5_1___impl( struct nitni_instance * self );
extern const struct type type_glesv2__GLDrawMode;
extern const struct class class_glesv2__GLDrawMode;
void* glesv2___Sys_gl_POINTS___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_LINES___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_LINE_LOOP___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_LINE_STRIP___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_TRIANGLES___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_TRIANGLE_STRIP___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_TRIANGLE_FAN___impl( struct nitni_instance * self );
extern const struct type type_glesv2__GLBlendFactor;
extern const struct class class_glesv2__GLBlendFactor;
void* glesv2___Sys_gl_ZERO___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_ONE___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_SRC_COLOR___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_ONE_MINUS_SRC_COLOR___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_SRC_ALPHA___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_ONE_MINUS_SRC_ALPHA___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_DST_ALPHA___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_ONE_MINUS_DST_ALPHA___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_DST_COLOR___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_ONE_MINUS_DST_COLOR___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_SRC_ALPHA_SATURATE___impl( struct nitni_instance * self );
extern const struct type type_glesv2__GLDepthFunc;
extern const struct class class_glesv2__GLDepthFunc;
void* glesv2___Sys_gl_NEVER___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_LESS___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_EQUAL___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_LEQUAL___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_GREATER___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_NOTEQUAL___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_GEQUAL___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_ALWAYS___impl( struct nitni_instance * self );
extern const struct type type_glesv2__GLPixelFormat;
extern const struct class class_glesv2__GLPixelFormat;
void* glesv2___Sys_gl_ALPHA___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_RGB___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_RGBA___impl( struct nitni_instance * self );
extern const struct type type_glesv2__GLBuffer;
extern const struct class class_glesv2__GLBuffer;
void* glesv2___Sys_gl_DEPTH_BUFFER_BIT___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_STENCIL_BUFFER_BIT___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_COLOR_BUFFER_BIT___impl( struct nitni_instance * self );
void glesv2___Sys_glFrontFace___impl( struct nitni_instance * self, void* mode );
extern const struct type type_glesv2__GLFrontFaceMode;
extern const struct class class_glesv2__GLFrontFaceMode;
void* glesv2___Sys_gl_CW___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_CCW___impl( struct nitni_instance * self );
void glesv2___Sys_glCullFace___impl( struct nitni_instance * self, void* mode );
extern const struct type type_glesv2__GLCullFaceMode;
extern const struct class class_glesv2__GLCullFaceMode;
void* glesv2___Sys_gl_FRONT___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_BACK___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_FRONT_AND_BACK___impl( struct nitni_instance * self );
void glesv2___Sys_glDepthRangef___impl( struct nitni_instance * self, double near, double far );
void glesv2___Sys_glDepthMask___impl( struct nitni_instance * self, int value );
void glesv2___Sys_glDepthFunc___impl( struct nitni_instance * self, void* func );
void glesv2___Sys_glBlendFunc___impl( struct nitni_instance * self, void* src_factor, void* dst_factor );
void glesv2___Sys_glPolygonOffset___impl( struct nitni_instance * self, double factor, double units );
void glesv2___Sys_glLineWidth___impl( struct nitni_instance * self, double width );
int glesv2___Sys_glGetBooleanv___impl( struct nitni_instance * self, void* pname );
double glesv2___Sys_glGetFloatv___impl( struct nitni_instance * self, void* pname );
long glesv2___Sys_glGetIntegerv___impl( struct nitni_instance * self, void* pname );
void* glesv2___Sys_gl_MAX_TEXTURE_SIZE___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_MAX_VIEWPORT_DIMS___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_MAX_VERTEX_ATTRIBS___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_MAX_VERTEX_UNIFORM_VECTORS___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_MAX_VARYING_VECTORS___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_MAX_COMBINED_TEXTURE_IMAGE_UNITS___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_MAX_VERTEX_TEXTURE_IMAGE_UNITS___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_MAX_TEXTURE_IMAGE_UNITS___impl( struct nitni_instance * self );
void* glesv2___Sys_gl_MAX_FRAGMENT_UNIFORM_VECTORS___impl( struct nitni_instance * self );
int glesv2___GLES_get_bool___impl( struct nitni_instance * self, long key );
double glesv2___GLES_get_float___impl( struct nitni_instance * self, long key );
long glesv2___GLES_get_int___impl( struct nitni_instance * self, long key );
extern const int COLOR_glesv2__GLES__get_bool;
extern const int COLOR_glesv2__GLES___capabilities;
val* NEW_glesv2__GLCapabilities(const struct type* type);
extern const struct type type_glesv2__GLCapabilities;
extern const int COLOR_glesv2__Sys__gl_FRAMEBUFFER_COMPLETE;
extern const int COLOR_glesv2__Sys__gl_FRAMEBUFFER_INCOMPLETE_ATTACHMENT;
extern const int COLOR_glesv2__Sys__gl_FRAMEBUFFER_INCOMPLETE_DIMENSIONS;
extern const int COLOR_glesv2__Sys__gl_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT;
extern const int COLOR_glesv2__Sys__gl_FRAMEBUFFER_UNSUPPORTED;
extern const int COLOR_glesv2__GLCapabilities___blend;
val* NEW_glesv2__GLCap(const struct type* type);
extern const struct type type_glesv2__GLCap;
extern const int COLOR_glesv2__GLCap__val_61d;
extern const int COLOR_glesv2__GLCapabilities___cull_face;
extern const int COLOR_glesv2__GLCapabilities___depth_test;
extern const int COLOR_glesv2__GLCapabilities___dither;
extern const int COLOR_glesv2__GLCapabilities___polygon_offset_fill;
extern const int COLOR_glesv2__GLCapabilities___sample_alpha_to_coverage;
extern const int COLOR_glesv2__GLCapabilities___sample_coverage;
extern const int COLOR_glesv2__GLCapabilities___scissor_test;
extern const int COLOR_glesv2__GLCapabilities___stencil_test;
void* glesv2___GLBuffer__pipe___impl( void* self, void* other );
